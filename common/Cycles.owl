Prefix(:=<http://www.semanticweb.org/david/ontologies/2020/2/untitled-ontology-92#>)
Prefix(owl:=<http://www.w3.org/2002/07/owl#>)
Prefix(rdf:=<http://www.w3.org/1999/02/22-rdf-syntax-ns#>)
Prefix(xml:=<http://www.w3.org/XML/1998/namespace>)
Prefix(xsd:=<http://www.w3.org/2001/XMLSchema#>)
Prefix(rdfs:=<http://www.w3.org/2000/01/rdf-schema#>)


Ontology(<http://www.semanticweb.org/david/ontologies/2020/2/untitled-ontology-92>

Declaration(Class(:AMotorcycleWheel))
Declaration(Class(:AWheel))
Declaration(Class(:Backward))
Declaration(Class(:Bicycle))
Declaration(Class(:BicycleWheel))
Declaration(Class(:Direction))
Declaration(Class(:DirectionOfTravel))
Declaration(Class(:Forward))
Declaration(Class(:Human))
Declaration(Class(:Inline))
Declaration(Class(:MachinedRoundThing))
Declaration(Class(:MadeThing))
Declaration(Class(:ManMadeThing))
Declaration(Class(:Motor))
Declaration(Class(:Motorbike))
Declaration(Class(:Movement))
Declaration(Class(:Parallel))
Declaration(Class(:PointA))
Declaration(Class(:PointB))
Declaration(Class(:PowerSource))
Declaration(Class(:ReverseToDirectionOfTravel))
Declaration(Class(:Tools))
Declaration(Class(:TrickCycle))
Declaration(Class(:Vehicle))
Declaration(Class(:WheelAlignment))
Declaration(Class(:WheeledVehicle))
Declaration(ObjectProperty(:faces))
Declaration(ObjectProperty(:hasWheelAlignment))
Declaration(ObjectProperty(:isCataloguedAs))
Declaration(ObjectProperty(:isMadeBy))
Declaration(ObjectProperty(:isPoweredBy))
Declaration(ObjectProperty(:movesFrom))
Declaration(ObjectProperty(:movesTo))
Declaration(ObjectProperty(:movesUsing))
Declaration(ObjectProperty(:using))
############################
#   Object Properties
############################

# Object Property: :faces (:faces)

SubObjectPropertyOf(:faces owl:topObjectProperty)

# Object Property: :hasWheelAlignment (:hasWheelAlignment)

SubObjectPropertyOf(:hasWheelAlignment owl:topObjectProperty)

# Object Property: :isCataloguedAs (:isCataloguedAs)

SubObjectPropertyOf(:isCataloguedAs owl:topObjectProperty)

# Object Property: :isMadeBy (:isMadeBy)

SubObjectPropertyOf(:isMadeBy owl:topObjectProperty)

# Object Property: :isPoweredBy (:isPoweredBy)

SubObjectPropertyOf(:isPoweredBy owl:topObjectProperty)

# Object Property: :movesFrom (:movesFrom)

SubObjectPropertyOf(:movesFrom owl:topObjectProperty)

# Object Property: :movesTo (:movesTo)

SubObjectPropertyOf(:movesTo owl:topObjectProperty)

# Object Property: :movesUsing (:movesUsing)

SubObjectPropertyOf(:movesUsing owl:topObjectProperty)

# Object Property: :using (:using)

SubObjectPropertyOf(:using owl:topObjectProperty)


############################
#   Classes
############################

# Class: :AMotorcycleWheel (:AMotorcycleWheel)

SubClassOf(:AMotorcycleWheel ObjectIntersectionOf(:AWheel ObjectSomeValuesFrom(:isMadeBy :Human) ObjectSomeValuesFrom(:using :Tools)))

# Class: :AWheel (:AWheel)

SubClassOf(:AWheel owl:Thing)

# Class: :Backward (:Backward)

EquivalentClasses(:Backward ObjectIntersectionOf(ObjectSomeValuesFrom(:faces :ReverseToDirectionOfTravel) ObjectSomeValuesFrom(:movesFrom :PointA) ObjectSomeValuesFrom(:movesTo :PointB)))

# Class: :Bicycle (:Bicycle)

SubClassOf(:Bicycle ObjectIntersectionOf(:ManMadeThing ObjectSomeValuesFrom(:faces :DirectionOfTravel) ObjectSomeValuesFrom(:hasWheelAlignment :Inline) ObjectSomeValuesFrom(:isCataloguedAs :WheeledVehicle) ObjectSomeValuesFrom(:isPoweredBy :Human) ObjectSomeValuesFrom(:movesFrom :PointA) ObjectSomeValuesFrom(:movesTo :PointB) ObjectExactCardinality(2 :movesUsing :BicycleWheel)))

# Class: :BicycleWheel (:BicycleWheel)

SubClassOf(:BicycleWheel :AWheel)

# Class: :Direction (:Direction)

EquivalentClasses(:Direction ObjectIntersectionOf(owl:Thing ObjectSomeValuesFrom(:movesFrom :PointA) ObjectSomeValuesFrom(:movesTo :PointB)))

# Class: :DirectionOfTravel (:DirectionOfTravel)

SubClassOf(:DirectionOfTravel owl:Thing)

# Class: :Forward (:Forward)

EquivalentClasses(:Forward ObjectIntersectionOf(ObjectSomeValuesFrom(:faces :DirectionOfTravel) ObjectSomeValuesFrom(:movesFrom :PointA) ObjectSomeValuesFrom(:movesTo :PointB)))

# Class: :Human (:Human)

SubClassOf(:Human :PowerSource)

# Class: :Inline (:Inline)

SubClassOf(:Inline :WheelAlignment)

# Class: :MachinedRoundThing (:MachinedRoundThing)

EquivalentClasses(:MachinedRoundThing ObjectIntersectionOf(ObjectSomeValuesFrom(:isMadeBy :Human) ObjectSomeValuesFrom(:using :Tools)))

# Class: :ManMadeThing (:ManMadeThing)

EquivalentClasses(:ManMadeThing ObjectSomeValuesFrom(:isMadeBy :Human))
SubClassOf(:ManMadeThing :MadeThing)

# Class: :Motor (:Motor)

SubClassOf(:Motor :PowerSource)

# Class: :Motorbike (:Motorbike)

EquivalentClasses(:Motorbike ObjectIntersectionOf(:ManMadeThing ObjectSomeValuesFrom(:faces :DirectionOfTravel) ObjectSomeValuesFrom(:hasWheelAlignment :Inline) ObjectSomeValuesFrom(:isCataloguedAs :WheeledVehicle) ObjectSomeValuesFrom(:isPoweredBy :Motor) ObjectSomeValuesFrom(:movesFrom :PointA) ObjectSomeValuesFrom(:movesTo :PointB) ObjectExactCardinality(2 :movesUsing :AMotorcycleWheel)))

# Class: :Movement (:Movement)

SubClassOf(:Movement owl:Thing)

# Class: :Parallel (:Parallel)

SubClassOf(:Parallel :WheelAlignment)

# Class: :PointA (:PointA)

SubClassOf(:PointA owl:Thing)

# Class: :PointB (:PointB)

SubClassOf(:PointB owl:Thing)

# Class: :PowerSource (:PowerSource)

SubClassOf(:PowerSource owl:Thing)

# Class: :ReverseToDirectionOfTravel (:ReverseToDirectionOfTravel)

SubClassOf(:ReverseToDirectionOfTravel owl:Thing)

# Class: :Tools (:Tools)

SubClassOf(:Tools ObjectSomeValuesFrom(:isMadeBy :Human))

# Class: :TrickCycle (:TrickCycle)

SubClassOf(:TrickCycle ObjectIntersectionOf(:ManMadeThing ObjectSomeValuesFrom(:faces :DirectionOfTravel) ObjectSomeValuesFrom(:hasWheelAlignment :Parallel) ObjectSomeValuesFrom(:isCataloguedAs :WheeledVehicle) ObjectSomeValuesFrom(:isPoweredBy :Human) ObjectSomeValuesFrom(:movesFrom :PointA) ObjectSomeValuesFrom(:movesTo :PointB) ObjectExactCardinality(2 :movesUsing :BicycleWheel)))

# Class: :Vehicle (:Vehicle)

EquivalentClasses(:Vehicle ObjectIntersectionOf(:Direction :ManMadeThing ObjectSomeValuesFrom(:isPoweredBy :PowerSource)))

# Class: :WheelAlignment (:WheelAlignment)

SubClassOf(:WheelAlignment owl:Thing)

# Class: :WheeledVehicle (:WheeledVehicle)

EquivalentClasses(:WheeledVehicle ObjectIntersectionOf(:ManMadeThing ObjectSomeValuesFrom(:hasWheelAlignment :WheelAlignment) ObjectSomeValuesFrom(:isPoweredBy :PowerSource) ObjectSomeValuesFrom(:movesFrom :PointA) ObjectSomeValuesFrom(:movesTo :PointB) ObjectSomeValuesFrom(:movesUsing :AWheel)))


)