DROP TABLE IF EXISTS document;
CREATE TABLE document
(
    dbid    INT AUTO_INCREMENT      COMMENT 'Unique DBID generated by hashing the iri',
    path    VARCHAR(255) NOT NULL       COMMENT 'Relative path of document',
    version VARCHAR(10) NOT NULL        COMMENT 'Current document version',
    draft   BOOLEAN NOT NULL    DEFAULT TRUE COMMENT 'Document draft status',

    PRIMARY KEY document_pk (dbid)
) ENGINE = InnoDB
  DEFAULT CHARSET = utf8;

DROP TABLE IF EXISTS document_archive;
CREATE TABLE document_archive
(
    dbid    INT         NOT NULL COMMENT 'Document DBID',
    version VARCHAR(10) NOT NULL COMMENT 'Document version number',
    data    LONGBLOB    NOT NULL COMMENT 'Document contents (compressed JSON)',

    PRIMARY KEY document_archive_pk (dbid, version),
    INDEX document_dbid_idx (dbid)
) ENGINE = InnoDB
  DEFAULT CHARSET = utf8;

DROP TABLE IF EXISTS concept;
CREATE TABLE concept
(
    dbid        INT AUTO_INCREMENT,
    document    INT NOT NULL                            COMMENT '',
    id          VARCHAR(140) NOT NULL COLLATE utf8_bin  COMMENT 'Unique IM concept identifier (case sensitive)',
    name        VARCHAR(255)                            COMMENT '',
    short_name  VARCHAR(60)                             COMMENT '',
    description VARCHAR(400)                            COMMENT '',
    scheme      INT                                     COMMENT '',
    code        VARCHAR(20) COLLATE utf8_bin            COMMENT '',
    status      INT NOT NULL DEFAULT 0                  COMMENT 'Status (concept)',
    updated     DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    revision    INT NOT NULL DEFAULT 1                  COMMENT '',
    published   VARCHAR(10)                             COMMENT 'Last published version',

    PRIMARY KEY concept_dbid_pk (dbid),
    UNIQUE KEY concept_id_uq (id),
    UNIQUE KEY concept_code_scheme (code, scheme),
    INDEX concept_updated_idx (updated),
    INDEX concept_document_status (document, status),
    FULLTEXT concept_name_ftx (name)
) ENGINE = InnoDB
  DEFAULT CHARSET = utf8;

DROP TABLE IF EXISTS concept_property;
CREATE TABLE concept_property
(
    dbid     INT NOT NULL                   COMMENT 'Concept DBID',
    `group`  INT NOT NULL DEFAULT 0         COMMENT 'Property group id',
    property INT NOT NULL                   COMMENT 'Property concept dbid',
    concept  INT                            COMMENT 'Property value concept dbid',
    value    VARCHAR(400) COLLATE utf8_bin  COMMENT 'Property value',

    INDEX concept_property_idx (dbid),
    INDEX concept_property_property_concept (property, concept),
    INDEX concept_property_concept_idx (concept)
) ENGINE = InnoDB
  DEFAULT CHARSET = utf8;

DROP TABLE IF EXISTS concept_domain;
CREATE TABLE concept_domain
(
    dbid        INT NOT NULL    COMMENT 'Concept DBID',
    property    INT NOT NULL    COMMENT 'Property DBID',
    minimum     INT NOT NULL    COMMENT 'Minimum occurrence count',
    maximum     INT NOT NULL    COMMENT 'Maximum occurrence count',

    INDEX concept_domain_concept (dbid)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

DROP TABLE IF EXISTS concept_range;
CREATE TABLE concept_range
(
    dbid    INT NOT NULL        COMMENT 'Concept DBID',
    `range` TEXT NOT NULL       COMMENT 'Range expression',

    PRIMARY KEY concept_range_pk (dbid)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

DROP TABLE IF EXISTS concept_term_map;
CREATE TABLE concept_term_map
(
    term      VARCHAR(250) NOT NULL,
    type      INT          NOT NULL,
    target    INT          NOT NULL,
    draft     BOOLEAN      NOT NULL DEFAULT TRUE,
    published VARCHAR(10),
    updated   DATETIME     NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY concept_term_map_pk (term, type),
    INDEX concept_term_map_draft (draft)
) ENGINE = InnoDB
  DEFAULT CHARSET = utf8;

DROP TABLE IF EXISTS concept_archive;
CREATE TABLE concept_archive (
    dbid INT NOT NULL       COMMENT 'Concept DBID',
    revision INT NOT NULL   COMMENT 'Revision',
    data JSON NOT NULL,

    PRIMARY KEY concept_archive_pk (dbid, revision),
    INDEX concept_archive_dbid (dbid)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

DROP TABLE IF EXISTS im_instance;
CREATE TABLE im_instance
(
    dbid INT AUTO_INCREMENT,
    name VARCHAR(100) NOT NULL,
    url  VARCHAR(400) NOT NULL,

    PRIMARY KEY im_instance_pk (dbid)
) ENGINE = InnoDB
  DEFAULT CHARSET = utf8;

-- RESERVED "term maps" document (dbid 0)
SET SESSION sql_mode = 'NO_AUTO_VALUE_ON_ZERO';

INSERT INTO document (dbid, path, version)
VALUES (0, 'InformationModel/dm/TermMaps', '1.0.0');

-- Workflow manager tables
DROP TABLE IF EXISTS workflow_task;
CREATE TABLE workflow_task
(
    dbid      INTEGER AUTO_INCREMENT,
    category  TINYINT NOT NULL  COMMENT '0=Concept mapping, 1=Term mapping',
    user_id   CHAR(36) BINARY   COMMENT 'The id of the last user to modify this task',
    user_name VARCHAR(50)       COMMENT 'Their (display) name',
    subject   VARCHAR(100)      COMMENT 'The task subject/name/title',
    status    INT NOT NULL      COMMENT 'Task status - 0=New, 1=In progress, 2=Complete, 3=Archived',
    data      JSON              COMMENT 'The task data',
    created   DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated   DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,

    PRIMARY KEY workflow_task_pk (dbid),
    INDEX workflow_task_category (category)
) ENGINE = InnoDB
  DEFAULT CHARSET = utf8;

DROP TABLE IF EXISTS workflow_task_category;
CREATE TABLE workflow_task_category
(
    dbid TINYINT     NOT NULL,
    name VARCHAR(50) NOT NULL,
    PRIMARY KEY workflow_task_category_pk (dbid)
) ENGINE = InnoDB
  DEFAULT CHARSET = utf8;

DROP TABLE IF EXISTS concept_tct;
CREATE TABLE concept_tct (
    source INT NOT NULL,
    property INT NOT NULL,
    target INT NOT NULL,
    level INT NOT NULL,

    PRIMARY KEY concept_pk (source, property, target),
    KEY concept_tct_source_property_level_idx (source, property, level),
    KEY concept_tct_source_property_idx (source, property),
    KEY concept_tct_property_target_idx (property, target)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

DROP PROCEDURE IF EXISTS proc_build_tct;

DELIMITER $$
CREATE PROCEDURE `proc_build_tct`(property_id VARCHAR(150))
BEGIN
    SELECT @lvl := 0;

    SELECT @property_dbid := dbid
    FROM concept
    WHERE id = property_id;

    DELETE FROM concept_tct
    WHERE property = @property_dbid;

    -- Insert LOWEST level (i.e. concepts without children)
    INSERT INTO concept_tct
    (source, property, target, level)
    SELECT o.dbid, @property_dbid, o.value, 0
    FROM concept_property_object o
    LEFT JOIN concept_property_object p ON p.value = o.dbid AND p.property = @property_dbid
    WHERE o.property = @property_dbid
    AND p.dbid IS NULL;

    SELECT @inserted := ROW_COUNT();

    WHILE @inserted > 0 DO
        SELECT @lvl := @lvl + 1;

        -- Insert parents of last tct entries
        REPLACE INTO concept_tct
        (source, property, target, level)
        SELECT DISTINCT h.dbid, @property_dbid, h.value, @lvl
        FROM concept_property_object h
        JOIN concept_tct t ON h.dbid = t.target AND t.level = @lvl - 1 AND t.property = @property_dbid
        WHERE h.property = @property_dbid;

        -- Inherit relationships
        REPLACE INTO concept_tct
        (source, property, target, level)
        SELECT DISTINCT t.source, @property_dbid, p.target, @lvl
        FROM concept_tct t
        JOIN concept_tct p ON p.source = t.target
        WHERE t.level = @lvl-1;

        SELECT @inserted := ROW_COUNT();
    END WHILE;
END$$
DELIMITER ;
